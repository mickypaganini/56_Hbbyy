# Example config file for signal parameterization.
# Andrew Hard - ahard@cern.ch
# July 13, 2015

# The function to use ("DoubleCB" for doubles-sided Crystal Ball function, 
# "CBGA" for Crystal Ball + Gaussian function, "GAx3" for triple-Gaussian,
# "BifurGA" for bifurcated Gaussian), "Landau" for a Landau function, "Voigt"
# for a Voigtian, and "CBPlusVoigt" for Crystal Ball + Voigtian:
SignalFunctionalForm:		DoubleCB

# The directory containing the plots and fit workspace:
OutputDir: 			ResDH_DoubleCB

# The name of the sample (e.g. a production mode "ggH", "VBF",... or "SM").
# For the convenience of the user, doesn't affect the program:
SampleName: 			SMHiggs

# The analysis type (Resonant, NonResonant):
AnalysisType: 			NonResonant

# The analysis luminosity, in pb-1, for normalization of the sample:
Luminosity:			4000;

# Standard Model Higgs Mass:
SMHiggsMass:			125.09

# Set the binning of the plot:
GeVPerPlotBin:			1

# MxAOD TTree name:
TreeName:			CollectionTree

# TBranch information:
MassBranchName:			HH2yybbEventInfoAuxDyn.m_yyjj_constrnd
#WeightBranchName: 		HH2yybbEventInfoAuxDyn.weight
WeightBranchName: 		HH2yybbEventInfoAuxDyn.weightFinal
XSBREffBranchName: 		HH2yybbEventInfoAuxDyn.crossSectionBRfilterEff
CutFlowBranchName: 		HH2yybbEventInfoAuxDyn.cutFlow

# Cut-Flow index corresponding to desired selection:
#CutFlowIndex: 			12
CutFlowIndex: 			13

# The binning for categories in the variable above (in matching units!):
CategoryBranchName: 	     	HH2yybbEventInfoAuxDyn.bTagCategory

# For resonant analysis, also need m_yy and range:
MyyBranchName: 			HH2yybbEventInfoAuxDyn.m_yy
ResonantMyyWindowWidth:		5.0

# A vector of category names for output plots and tables:
#CategoryNames: 	       	     	ZeroTag OneTag TwoTag
CategoryNames: 	       	     	Inclusive

# An option to make the program run faster by making local copies of the input
# files, since processing MxAODs on EOS takes eons.
MakeLocalCopies: 		NO

# The input file, or a list of files separated by a space:
InputFile: 			/afs/cern.ch/user/a/ahard/work_directory/files_Hbbgg/GlobalInputs/inputs_13TeV/MxAODs/SMH115.root /afs/cern.ch/user/a/ahard/work_directory/files_Hbbgg/GlobalInputs/inputs_13TeV/MxAODs/SMH120.root /afs/cern.ch/user/a/ahard/work_directory/files_Hbbgg/GlobalInputs/inputs_13TeV/MxAODs/SMH125.root /afs/cern.ch/user/a/ahard/work_directory/files_Hbbgg/GlobalInputs/inputs_13TeV/MxAODs/SMH130.root /afs/cern.ch/user/a/ahard/work_directory/files_Hbbgg/GlobalInputs/inputs_13TeV/MxAODs/SMH135.root

# Example for setting fit parameter initial values and ranges. If not set, the
# program uses default values. Begin with a list of parameter names that have 
# initial values defined:
UseDefinedParams:		YES
#DefinedParams:			a_muCBNom b_muCBNom c_muCBNom a_sigmaCBNom b_sigmaCBNom a_alphaCB b_alphaCB c_alphaCB nCB a_muGANom b_muGANom c_muGANom a_sigmaCBNom b_sigmaCBNom fracCB

DefinedParams: 			a_muCBNom b_muCBNom c_muCBNom a_sigmaCBNom b_sigmaCBNom a_alphaCBLo b_alphaCBLo c_alphaCBLo nCBLo a_alphaCBHi b_alphaCBHi c_alphaCBHi nCBHi

# Double-sided crystal ball parameters:
Param_a_muCBNom:		[-0.38,-1.0,1.0]
Param_b_muCBNom: 		[-0.06,-0.1,0.1]
Param_c_muCBNom: 		[-0.02,-0.1,0.1]
Param_a_sigmaCBNom: 		[1.545,0.5,4.0]
Param_b_sigmaCBNom:		[0.605,0.1,2.0]
Param_a_alphaCBLo: 		[1.519,1.0,4.0] 
Param_b_alphaCBLo: 		[0.999,0.0,2.0] 
Param_c_alphaCBLo: 		[4.901,0.0,5.0]
Param_nCBLo: 			[5.95]
Param_a_alphaCBHi: 		[2.295,0.0,4.0]
Param_b_alphaCBHi: 		[-0.345,-1.0,0.0]
Param_c_alphaCBHi: 		[1.712,0.0,2.0]
Param_nCBHi: 			[3.15]

# Crystal Ball + Gaussian parameters:
#Param_a_muCBNom:		[-0.018,-1.0,1.0]
#Param_b_muCBNom: 		[-0.00037,-0.1,0.1]
#Param_c_muCBNom: 		[0.0]
#Param_a_sigmaCBNom: 		[1.56,0.5,2.0]
#Param_b_sigmaCBNom:		[0.0.007,0.0,2.0]
#Param_a_alphaCB: 		[1.54,1.0,3.0] 
#Param_b_alphaCB: 		[0.0]
#Param_c_alphaCB: 		[0.0]
#Param_nCB: 			[10.0]
#Param_a_muGANom:		[1.34,-1.0,2.0]
#Param_b_muGANom: 		[-0.0102,-0.1,0.1]
#Param_c_muGANom: 		[0.0]
#Param_a_sigmaCBNom: 		[1.56,0.5,2.0]
#Param_b_sigmaCBNom:		[0.0]
#Param_fracCB: 			[0.95,0.0,1.0]


# Print out a lot of information from the SigParam tool:
Verbose: 			NO

# End of example